#ifndef EVAL_H
#define EVAL_H

// Game phase constants
const int minorPhase = 1;
const int rookPhase = 2;
const int queenPhase = 4;
const int totalPhase = minorPhase * 8 + rookPhase * 4 + queenPhase * 2;

const int BishopPairMG = 46;
const int PawnPassedMG[8] = {-2, 9, 1, -20, 8, 33, 100, 148, };
const int PawnPassedConnectedMG[8] = {-2, 2, -8, 16, 54, 33, 48, 73, };
const int PawnConnectedMG = 12;
const int PawnIsolatedMG = -19;
const int RookOpenFileMG = 68;
const int RookSemiOpenFileMG = 28;
const int QueenOpenFileMG = -8;
const int QueenSemiOpenFileMG = 2;
const int tempoMG = 22;

const int BishopPairEG = 56;
const int PawnPassedEG[8] = {-2, 7, 15, 42, 64, 130, 209, 248, };
const int PawnPassedConnectedEG[8] = {-2, 9, 9, 15, 12, -25, 73, 123, };
const int PawnConnectedEG = 11;
const int PawnIsolatedEG = -8;
const int RookOpenFileEG = 5;
const int RookSemiOpenFileEG = 23;
const int QueenOpenFileEG = 49;
const int QueenSemiOpenFileEG = 29;
const int tempoEG = 21;

const int PawnMG[64] = {
-2, -2, -2, -2, -2, -2, -2, -2, 
-26, -15, -25, -33, -21, 26, 29, -16, 
-19, -28, -12, -18, -9, -1, 14, -10, 
-16, -17, -1, 17, 22, 8, -4, -20, 
2, 8, 13, 33, 32, 24, 11, -8, 
20, -2, 30, 21, 63, 92, 34, 5, 
37, 51, 7, 39, 20, 35, -28, -60, 
-2, -2, -2, -2, -2, -2, -2, -2, 
};
const int PawnEG[64] = {
-2, -2, -2, -2, -2, -2, -2, -2, 
16, 7, 17, 10, 18, 3, -4, -6, 
5, 6, -2, 4, 5, 3, -9, -6, 
18, 12, -2, -10, -6, -4, 0, 3, 
30, 15, 5, -16, -10, -3, 9, 17, 
56, 53, 26, -10, -28, -8, 24, 38, 
66, 51, 27, -1, 11, -2, 39, 78, 
-2, -2, -2, -2, -2, -2, -2, -2, 
};
const int KnightMG[64] = {
-105, -26, -57, -39, -12, -21, -21, -34, 
-36, -53, -9, 0, 6, 25, -12, -14, 
-26, -5, 20, 22, 33, 28, 38, -17, 
-12, 16, 26, 23, 40, 34, 35, -5, 
-12, 25, 27, 76, 55, 95, 29, 33, 
-50, 68, 50, 80, 110, 127, 94, 49, 
-72, -32, 86, 39, 22, 77, 4, -17, 
-109, -56, -35, -26, 26, -70, -35, -85, 
};
const int KnightEG[64] = {
-23, -45, -11, -3, -10, -13, -46, -59, 
-33, -9, 8, 10, 10, -8, -9, -40, 
-13, 14, 10, 28, 25, 11, -8, -9, 
-4, 9, 34, 45, 33, 32, 18, -8, 
-3, 18, 44, 36, 38, 22, 19, -10, 
-15, -7, 24, 22, 4, 4, -17, -42, 
-21, 3, -18, 13, 3, -21, -20, -48, 
-88, -40, -5, -23, -17, -35, -64, -103, 
};
const int BishopMG[64] = {
-51, -16, -32, -30, -25, -34, -46, -51, 
-6, 8, 2, -15, -5, 8, 22, -9, 
-16, 4, 6, 2, 0, 18, 8, -10, 
-26, 3, -1, 19, 25, 1, -4, -8, 
-15, -10, 9, 46, 33, 29, -5, -13, 
-39, 15, 31, 27, 22, 45, 23, -15, 
-49, 2, -27, -24, 21, 42, 27, -60, 
-48, -17, -93, -60, -24, -56, -6, -5, 
};
const int BishopEG[64] = {
-24, -5, -26, -4, -9, -13, -2, -14, 
-14, -21, 0, 5, 7, -3, -12, -35, 
-8, 1, 15, 17, 21, 6, -2, -10, 
-2, 8, 20, 27, 15, 13, 1, -7, 
-2, 17, 18, 18, 19, 13, 4, 0, 
4, -2, 7, 3, 6, 6, 7, 0, 
-7, 1, 9, -9, -2, -6, -9, -16, 
-14, -24, -13, -9, -5, -11, -18, -34, 
};
const int RookMG[64] = {
-10, -11, -6, 3, 6, 13, -33, -16, 
-40, -12, -32, -13, -12, 5, -10, -71, 
-43, -26, -26, -27, -12, -4, -2, -25, 
-39, -29, -21, -14, -7, -9, 6, -25, 
-32, -17, -3, 8, 6, 26, -7, -14, 
-3, 3, 11, 9, -4, 20, 43, 5, 
17, 20, 32, 34, 41, 61, 14, 22, 
14, 24, 13, 21, 30, 17, 15, 16, 
};
const int RookEG[64] = {
-6, 1, 4, 0, -6, -12, 4, -22, 
-3, -10, 1, -2, -9, -10, -13, 6, 
-2, 2, -3, -1, -7, -11, -6, -16, 
11, 10, 12, 6, -2, -1, -3, -3, 
17, 11, 17, 5, 6, 7, 5, 11, 
12, 16, 11, 13, 8, 7, 3, 4, 
20, 21, 21, 18, 5, 9, 18, 15, 
21, 16, 21, 19, 18, 13, 14, 15, 
};
const int QueenMG[64] = {
-14, -24, -10, 9, -23, -29, -35, -57, 
-40, -13, 14, 2, 9, 18, -12, -3, 
-18, 3, -4, -2, -2, 4, 17, 11, 
-14, -29, -9, -11, 3, 5, 5, -1, 
-29, -30, -12, -9, 13, 24, 12, -2, 
-17, -11, 10, 18, 45, 63, 61, 63, 
-31, -43, 8, 10, 9, 71, 57, 57, 
-36, 5, 13, 11, 73, 64, 36, 43, 
};
const int QueenEG[64] = {
-22, -22, -26, -48, 0, -30, -20, -44, 
-21, -15, -33, -13, -10, -23, -18, -23, 
-7, -27, 3, 7, 9, 20, 18, 3, 
-12, 34, 24, 55, 32, 43, 47, 32, 
12, 27, 21, 46, 59, 46, 70, 56, 
-12, 9, 13, 46, 56, 63, 41, 30, 
-12, 28, 25, 43, 53, 32, 31, 23, 
-4, 24, 29, 34, 26, 19, 17, 36, 
};
const int KingMG[64] = {
5, 74, 47, -47, 32, -12, 65, 52, 
30, 42, 18, -65, -32, 0, 46, 51, 
2, 20, -4, -25, -12, -13, 18, -12, 
-39, 14, -13, -37, -43, -27, -6, -57, 
-26, 0, -10, -38, -41, -16, 3, -29, 
1, 0, -9, -37, -37, 7, 24, -18, 
-16, -11, -40, -29, -44, -35, -21, -47, 
-118, -18, -27, -55, -102, -51, -31, -37, 
};
const int KingEG[64] = {
-69, -55, -38, -16, -43, -20, -46, -71, 
-39, -21, -1, 19, 16, 5, -14, -37, 
-26, -7, 12, 21, 24, 19, 2, -13, 
-23, -6, 23, 32, 37, 29, 6, -9, 
-10, 22, 29, 35, 35, 41, 30, 3, 
8, 22, 27, 23, 26, 57, 50, 11, 
-13, 17, 20, 19, 28, 47, 24, 14, 
-87, -38, -15, -19, -6, 21, 2, -28, 
};



const int diag_nw[64] = {
   0, 1, 2, 3, 4, 5, 6, 7,
   1, 2, 3, 4, 5, 6, 7, 8,
   2, 3, 4, 5, 6, 7, 8, 9,
   3, 4, 5, 6, 7, 8, 9,10,
   4, 5, 6, 7, 8, 9,10,11,
   5, 6, 7, 8, 9,10,11,12,
   6, 7, 8, 9,10,11,12,13,
   7, 8, 9,10,11,12,13,14
};

const int diag_ne[64] = {
   7, 6, 5, 4, 3, 2, 1, 0,
   8, 7, 6, 5, 4, 3, 2, 1,
   9, 8, 7, 6, 5, 4, 3, 2,
  10, 9, 8, 7, 6, 5, 4, 3,
  11,10, 9, 8, 7, 6, 5, 4,
  12,11,10, 9, 8, 7, 6, 5,
  13,12,11,10, 9, 8, 7, 6,
  14,13,12,11,10, 9, 8, 7
};

int bonus_dia_distance[15] = {5, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

#endif
